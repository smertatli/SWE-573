# Generated by Django 3.0.7 on 2020-12-21 21:39

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tracker', '0009_auto_20201220_2316'),
    ]

    operations = [
        migrations.CreateModel(
            name='TweetAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.CharField(max_length=100)),
                ('domain_id', models.CharField(blank=True, max_length=100, null=True)),
                ('entity_id', models.CharField(blank=True, max_length=100, null=True)),
                ('key', models.DateTimeField()),
            ],
            options={
                'db_table': 'tweet_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TweetAnnotationDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_id', models.CharField(max_length=100)),
                ('domain_name', models.CharField(blank=True, max_length=100, null=True)),
                ('domain_desc', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'tweet_annotation_domain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TweetAnnotationEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(max_length=100)),
                ('entity_name', models.CharField(blank=True, max_length=100, null=True)),
                ('entity_desc', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'tweet_annotation_entity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TweetEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.CharField(max_length=100)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('start_pos', models.IntegerField(blank=True, null=True)),
                ('end_pos', models.IntegerField(blank=True, null=True)),
                ('probability', models.FloatField(blank=True, null=True)),
                ('type_of', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('normalized_text', models.CharField(blank=True, max_length=100, null=True)),
                ('tag', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('expanded_url', models.CharField(blank=True, max_length=100, null=True)),
                ('display_url', models.CharField(blank=True, max_length=100, null=True)),
                ('url_title', models.CharField(blank=True, max_length=100, null=True)),
                ('url_description', models.CharField(blank=True, max_length=100, null=True)),
                ('key', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tweet_entity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TweetInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('author_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField()),
                ('lang', models.CharField(blank=True, max_length=20, null=True)),
                ('conversation_id', models.CharField(blank=True, max_length=100, null=True)),
                ('possibly_sensitive', models.CharField(blank=True, max_length=10, null=True)),
                ('in_reply_to_user_id', models.CharField(blank=True, max_length=100, null=True)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('retweet_count', models.IntegerField(blank=True, null=True)),
                ('reply_count', models.IntegerField(blank=True, null=True)),
                ('like_count', models.IntegerField(blank=True, null=True)),
                ('quote_count', models.IntegerField(blank=True, null=True)),
                ('withheld', models.CharField(blank=True, max_length=100, null=True)),
                ('place_place_full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('place_id', models.CharField(blank=True, max_length=100, null=True)),
                ('place_country', models.CharField(blank=True, max_length=100, null=True)),
                ('place_country_code', models.CharField(blank=True, max_length=100, null=True)),
                ('place_place_name', models.CharField(blank=True, max_length=100, null=True)),
                ('place_place_type', models.CharField(blank=True, max_length=100, null=True)),
                ('key', models.DateTimeField()),
            ],
            options={
                'db_table': 'tweet_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TweetMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('media_key', models.CharField(max_length=100)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('view_count', models.IntegerField(blank=True, null=True)),
                ('duration_ms', models.IntegerField(blank=True, null=True)),
                ('key', models.DateTimeField()),
            ],
            options={
                'db_table': 'tweet_media',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TweetReferenced',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('reference_tweet_id', models.CharField(max_length=100)),
                ('key', models.DateTimeField()),
            ],
            options={
                'db_table': 'tweet_referenced',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TweetReferencedInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('author_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField()),
                ('lang', models.CharField(blank=True, max_length=20, null=True)),
                ('conversation_id', models.CharField(blank=True, max_length=100, null=True)),
                ('possibly_sensitive', models.CharField(blank=True, max_length=10, null=True)),
                ('in_reply_to_user_id', models.CharField(blank=True, max_length=100, null=True)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('retweet_count', models.IntegerField(blank=True, null=True)),
                ('reply_count', models.IntegerField(blank=True, null=True)),
                ('like_count', models.IntegerField(blank=True, null=True)),
                ('quote_count', models.IntegerField(blank=True, null=True)),
                ('withheld', models.CharField(blank=True, max_length=100, null=True)),
                ('key', models.DateTimeField()),
            ],
            options={
                'db_table': 'tweet_referenced_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TweetUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('protected', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('verified', models.CharField(blank=True, max_length=100, null=True)),
                ('followers_count', models.IntegerField(blank=True, null=True)),
                ('following_count', models.IntegerField(blank=True, null=True)),
                ('tweet_count', models.IntegerField(blank=True, null=True)),
                ('listed_count', models.IntegerField(blank=True, null=True)),
                ('key', models.DateTimeField()),
            ],
            options={
                'db_table': 'tweet_user',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='ReferencedTweets',
        ),
        migrations.DeleteModel(
            name='CollectedTweets',
        ),
    ]
